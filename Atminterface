import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Account {
    private int accountNumber;
    private String pin;
    private double balance;

    public Account(int accountNumber, String pin, double balance) {
        this.accountNumber = accountNumber;
        this.pin = pin;
        this.balance = balance;
    }

    public int getAccountNumber() {
        return accountNumber;
    }

    public String getPin() {
        return pin;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public boolean withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            return true;
        }
        return false;
    }
}

public class Atminterface {
    private static Map<Integer, Account> accounts = new HashMap<>();
    private static int accountNumberCounter = 1000;
    private static Account currentAccount = null;

    public static void main(String[] args) {
        initializeAccounts();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nATM Interface");
            System.out.println("1. Login");
            System.out.println("2. Exit");
            System.out.print("Select an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    login(scanner);
                    break;
                case 2:
                    System.out.println("Exiting the ATM. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    private static void initializeAccounts() {
        accounts.put(1001, new Account(1001, "1234", 1500.0));
        accounts.put(1002, new Account(1002, "5678", 2500.0));
    }

    private static void login(Scanner scanner) {
        System.out.print("Enter your account number: ");
        int accountNumber = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character
        System.out.print("Enter your PIN: ");
        String pin = scanner.nextLine();

        Account account = accounts.get(accountNumber);

        if (account != null && account.getPin().equals(pin)) {
            currentAccount = account;
            showMainMenu(scanner);
        } else {
            System.out.println("Invalid account number or PIN. Please try again.");
        }
    }

    private static void showMainMenu(Scanner scanner) {
        while (currentAccount != null) {
            System.out.println("\nMain Menu");
            System.out.println("1. Check Balance");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Logout");
            System.out.print("Select an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    System.out.println("Current balance: $" + currentAccount.getBalance());
                    break;
                case 2:
                    System.out.print("Enter the amount to deposit: $");
                    double depositAmount = scanner.nextDouble();
                    scanner.nextLine(); // Consume the newline character
                    currentAccount.deposit(depositAmount);
                    System.out.println("Deposit successful. New balance: $" + currentAccount.getBalance());
                    break;
                case 3:
                    System.out.print("Enter the amount to withdraw: $");
                    double withdrawAmount = scanner.nextDouble();
                    scanner.nextLine(); // Consume the newline character
                    if (currentAccount.withdraw(withdrawAmount)) {
                        System.out.println("Withdrawal successful. New balance: $" + currentAccount.getBalance());
                    } else {
                        System.out.println("Insufficient balance. Withdrawal failed.");
                    }
                    break;
                case 4:
                    currentAccount = null;
                    System.out.println("Logged out. Thank you for using the ATM!");
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}
